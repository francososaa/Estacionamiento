openapi: 3.0.0
info:
  description: Especificacion de API para proyecto de Estacionamiento
  tittle: Estacionamiento
  version: 0.0.1
servers:
  - url: "http://localhost:8081"
paths:

  /api/v1/authenticate:
    post:
      operationId: Add Authenticate
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns a reservation.'
          schema:
            $ref: '#/definitions/Reservation'
        '400':
          description: 'Bad Request.'
          schema:
            $ref: '#/definitions/ErrorDto'
        '500':
          description: 'An internal error.'
          schema:
            $ref: '#/definitions/ErrorDto'
      description: ""
      tags:
        - Authenticate
      consumes:
        - application/json

          
  /api/v1/authenticate/{legajo}:
    get:
      operationId: Get Parameter
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns an Authentication'
          schema:
            $ref: '#/definitions/Reservation'
        '500':
          description: 'An internal error in the service.'
          schema:
            $ref: '#/definitions/ErrorDto'
      description: ""
      tags:
        - Authenticate
      consumes:
        - application/json

          
  /api/v1/vehicleType:
    get:
      operationId: Get Vehicle Type
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns vehicle type'
          schema:
            $ref: '#/definitions/Reservation'
        '500':
          description: 'An internal error in the service.'
          schema:
            $ref: '#/definitions/ErrorDto'
      description: ""
      tags:
        - Vehicle Type
      consumes:
        - application/json
        
  /api/v1/buildingCapacity:
    get:
      operationId: Get Building Capacity
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns a building capacity'
          schema:
            $ref: '#/definitions/Reservation'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/Reservation'
        '500':
          description: 'An internal error.'

      description: ""
      tags:
        - Building Capacity
      consumes:
        - application/json
    put:
      operationId: Add Building Capacity
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns a building capacity'
          schema:
            $ref: '#/definitions/Reservation'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/Reservation'
        '500':
          description: 'An internal error.'
      description: ""
      tags:
        - Building Capacity
      consumes:
        - application/json
  /api/v1/reservation/{id}:
    get:
      operationId: Get Reservation
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns an reservation.'
          schema:
            $ref: '#/definitions/Reservation'
        '500':
          description: 'An internal error in the service.'
      description: ""
      tags:
        - Reservation
      consumes:
        - application/json
  /api/v1/reservation/{id}/vehicle/{vehicleId}:
    put:
      operationId: Get Reservation
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns an reservation.'
          schema:
            $ref: '#/definitions/Reservation'
        '500':
          description: 'An internal error in the service.'
          schema:
            $ref: '#/definitions/ErrorDto'
      description: ""
      tags:
        - Reservation
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: "uuid"
        - in: path
          name: vehicleId
          type: string
          required: true
          description: "uuid"
        
  /api/v1/reservation/{id}/cancelled:
    put:
      operationId: Get Reservation
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns an reservation.'
          schema:
            $ref: '#/definitions/Reservation'
        '500':
          description: 'An internal error in the service.'
          schema:
            $ref: '#/definitions/ErrorDto'
      description: ""
      tags:
        - Reservation
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: "uuid"
          
  /api/v1/reservation:
    get:
      operationId: Get Reservation
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns an reservation.'
          schema:
            $ref: '#/definitions/Reservation'
        '500':
          description: 'An internal error in the service.'
          schema:
            $ref: '#/definitions/ErrorDto'
      description: ""
      tags:
        - Reservation
      consumes:
        - application/json
    post:
      operationId: Add Reservation
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns an reservation.'
          schema:
            $ref: '#/definitions/Reservation'
        '400':
          description: 'Bad request.'
          schema:
            $ref: '#/definitions/ErrorDto'
        '500':
          description: 'An internal error in the service.'
          schema:
            $ref: '#/definitions/ErrorDto'
      description: ""
      tags:
        - Reservation
      consumes:
        - application/json
      parameters:
        - in: body
          name: ReservationRequestInputDto
          description: ""
          schema:
            $ref: '#/definitions/ReservationRequestInputDto'
            
  /api/v1/reservation/list:
    get:
      operationId: Get Reservations
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns an reservation.'
          schema:
            $ref: '#/definitions/Reservation'
        '500':
          description: 'An internal error in the service.'
          schema:
            $ref: '#/definitions/ErrorDto'
      description: ""
      tags:
        - Reservation
      consumes:
        - application/json
        
  /api/v1/reservation/{id}/state:
    put:
      operationId: Get Reservations
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns an reservation.'
          schema:
            $ref: '#/definitions/Reservation'
        '500':
          description: 'An internal error in the service.'
          schema:
            $ref: '#/definitions/ErrorDto'
      description: ""
      tags:
        - Reservation
      consumes:
        - application/json
      parameters:
        in: path
          - name: id
          - type: string
          - required: true
          - description: "uuid"
         
  /api/v1/reservation/legajo/{legajo}/availability:
    get:
      operationId: Get Reservations
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns an reservation.'
          schema:
            $ref: '#/definitions/Reservation'
        '500':
          description: 'An internal error in the service.'
          schema:
            $ref: '#/definitions/ErrorDto'
      description: ""
      tags:
        - Reservation
      consumes:
        - application/json
      parameters:
        -in: path
         name: legajo
         type: string
         required: true
         description: ""
         
  /api/v1/vehicle:
    get:
      operationId: Get Vehicle
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns an vehicle.'
          schema:
            $ref: '#/definitions/Reservation'
        '500':
          description: 'An internal error in the service.'
          schema:
            $ref: '#/definitions/ErrorDto'
      description: ""
      tags:
        - Vehicle
      consumes:
        - application/json
    post:
      operationId: Add Vehicle
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns an vehicle.'
          schema:
            $ref: '#/definitions/Reservation'
        '400':
          description: 'Bad request.'
          schema:
            $ref: '#/definitions/ErrorDto'
        '500':
          description: 'An internal error in the service.'
          schema:
            $ref: '#/definitions/ErrorDto'
      description: ""
      tags:
        - Vehicle
      consumes:
        - application/json
      parameters:
        -in: body
          name: ReservationRequestInputDto
          description: ""
          schema: 
           $ref: '#/definitions/ReservationRequestInputDto'
           
  /api/v1/vehicle/licence/{licence}:
    get:
      operationId: Get Vehicle by licence
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns vehicle.'
          schema:
            $ref: '#/definitions/Reservation'
        '500':
          description: 'An internal error in the service.'
          schema:
            $ref: '#/definitions/ErrorDto'
      description: ""
      tags:
        - Vehicle
      consumes:
        - application/json
      parameters:
        -in: path
          name: licente
          type: string
          required: true
          description: ""
          
  /api/v1/vehicle/{id}:
    put:
      operationId: Get Vehicle
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns an vehicle.'
          schema:
            $ref: '#/definitions/Reservation'
        '500':
          description: 'An internal error in the service.'
          schema:
            $ref: '#/definitions/ErrorDto'
      description: ""
      tags:
        - Vehicle
      consumes:
        - application/json
      parameters:
        -in: path
          name: id
          type: string
          required: true
          description: "uuid"
    get:
      operationId: Get Vehicle
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns an vehicle.'
          schema:
            $ref: '#/definitions/Reservation'
        '500':
          description: 'An internal error in the service.'
          schema:
            $ref: '#/definitions/ErrorDto'
      description: ""
      tags:
        - Vehicle
      consumes:
        - application/json
      parameters:
        -in: path
          name: id
          type: string
          required: true
          description: "uuid"
          
  /api/v1/vehicle/{id}/cancelled:
    put:
      operationId: Get Vehicle
      produces:
        - application/json
      responses:
        '200':
          description: 'Returns an vehicle.'
          schema:
            $ref: '#/definitions/Reservation'
        '500':
          description: 'An internal error in the service.'
          schema:
            $ref: '#/definitions/ErrorDto'
      description: ""
      tags:
        - Vehicle
      consumes:
        - application/json
      parameters:
        -in: path
          name: id
          type: string
          required: true
          description: "uuid"




components:

  parameters:
    sortParam:
      name: sort
      in: query
      description: " ordenacion"
      example: "+fecha -nombre"
      schema:
        type: string
        
        
    limitParam:
      name: limit
      in: query
      description: "número de resultados a obtener"
      example: 50
      schema:
        type: integer    
    
    
    skipParam:
      name: skip
      in: query
      description: "número de resultados desde el que partir"
      example: 0
      schema:
        type: integer    


  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
  schemas:    
 
    User:
      type: object
      required: 
        - email
        - password
        - roleId
      properties:
        userId:
          type: string
          format: uuid
          readOnly: true
        dni:
          type: integer
        firstname:
          type: string
        lastname:
          type: string
        password:
          type: string
          format: password
        email:
          type: string
          format: email
        isActive: 
            type: boolean
        roleId: 
            type: integer
    
    Building_Capacity:
      type: object
      properties:
        buildingCapacityId: 
          type: integer
        date: 
            type: string
        totalVehicles: 
            type: integer
        overallCapacity: 
            type: integer
        overallCapacityOccupied: 
            type: integer
        isCompleteOverallCapacity: 
            type: boolean
        vehicleTypeId: 
            type: integer
            
    Collection_Of_The_Day:
      type: object
      properties:
        collectionOfTheDayId: 
            type: string
            format: uuid
        date: 
            type: string
        moneyGenerated: 
            type: integer
        vehicleTypeId: 
            type: integer
            
    Reservation:
      type: object
      properties:
        reservationId: 
          type: string
          format: uuid
        state: 
          type: string
        date: 
            type: string
        vehicleId: 
          type: string
          format: uuid
        userId: 
            type: string
            format: uuid
    
    Role:
      type: object
      properties:
        roleId:
          type: string
          format: uuid
        name:
          type: string
    
    Vehicle_Price:
      type: object
      properties:
        vehiclePriceId:
          type: string
          format: uuid
        vehiclePrice:
          type: integer
        vehicleTypeId:
          type: integer
    
    Vehicle_Type:
      type: object
      properties:
        vehicleTypeId:
          type: string
          format: uuid
        description:
          type: string
 
    Vehicle:
      type: object
      properties:
        vehicleId:
          type: string
          format: uuid
        license:
          type: string
        model:
          type: string
        isActive:
          type: boolean
        vehicleTypeId:
          type: integer
        userId:
          type: string
          format: uuid
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            